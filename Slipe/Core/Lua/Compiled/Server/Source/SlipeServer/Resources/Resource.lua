-- Generated by CSharp.lua Compiler
local System = System
local SlipeMtaDefinitions
local SlipeServerResources
local SlipeSharedElements
local SlipeSharedResources
local SystemXml
System.import(function (out)
  SlipeMtaDefinitions = Slipe.MtaDefinitions
  SlipeServerResources = Slipe.Server.Resources
  SlipeSharedElements = Slipe.Shared.Elements
  SlipeSharedResources = Slipe.Shared.Resources
  SystemXml = System.Xml
end)
System.namespace("Slipe.Server.Resources", function (namespace)
  -- <summary>
  -- Represents an MTA resource
  -- </summary>
  namespace.class("Resource", function (namespace)
    local getLastStartTime, getLoadFailureReason, getLoadTime, getOrganizationalPath, getIsArchived, getACLRequests, thisResource, getThis, 
    getAll, UpdateACLRequest, MapRoot, AddConfig, AddMap, Delete, Refresh, RemoveFile, 
    Rename, Restart, GetInfo, SetInfo, Start, Stop, CopyFrom, RefreshAll, 
    __ctor1__, __ctor2__
    -- <summary>
    -- Create a resource from an MTA resource element
    -- </summary>
    __ctor1__ = function (this, resource)
      SlipeSharedResources.SharedResource.__ctor__(this, resource)
      SlipeServerResources.ResourceManager.getInstance():RegisterResource(this)
    end
    -- <summary>
    -- Create a new empty resource
    -- </summary>
    __ctor2__ = function (this, name, organizationalDir)
      __ctor1__(this, SlipeMtaDefinitions.MtaServer.CreateResource(name, organizationalDir))
    end
    getLastStartTime = function (this)
      return SlipeMtaDefinitions.MtaShared.GetDateTimeFromSecondStamp(SlipeMtaDefinitions.MtaServer.GetResourceLastStartTime(this.MTAResource))
    end
    getLoadFailureReason = function (this)
      return SlipeMtaDefinitions.MtaServer.GetResourceLoadFailureReason(this.MTAResource)
    end
    getLoadTime = function (this)
      return SlipeMtaDefinitions.MtaShared.GetDateTimeFromSecondStamp(SlipeMtaDefinitions.MtaServer.GetResourceLoadTime(this.MTAResource))
    end
    getOrganizationalPath = function (this)
      return SlipeMtaDefinitions.MtaServer.GetResourceOrganizationalPath(this.MTAResource)
    end
    getIsArchived = function (this)
      return SlipeMtaDefinitions.MtaServer.IsResourceArchived(this.MTAResource)
    end
    getACLRequests = function (this)
      return SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaServer.GetResourceACLRequests(this.MTAResource), "acl-request", T)
    end
    getThis = function ()
      if thisResource == nil then
        thisResource = SlipeServerResources.ResourceManager.getInstance():GetResource(SlipeMtaDefinitions.MtaShared.GetThisResource())
      end
      return thisResource
    end
    getAll = function ()
      local resourceList = SlipeMtaDefinitions.MtaShared.GetArrayFromTable(SlipeMtaDefinitions.MtaServer.GetResources(), "mta-resource", T)
      return SlipeServerResources.ResourceManager.getInstance():CastMultiple(resourceList)
    end
    -- <summary>
    -- This function changes the access for one ACL request of the given resource.
    -- </summary>
    UpdateACLRequest = function (this, rightName, access, byWho)
      return SlipeMtaDefinitions.MtaServer.UpdateResourceACLRequest(this.MTAResource, rightName, access, byWho)
    end
    -- <summary>
    -- This function retrieves the root element of a certain map in this resource
    -- </summary>
    MapRoot = function (this, mapName)
      return SlipeSharedElements.ElementManager.getInstance():GetElement(SlipeMtaDefinitions.MtaServer.GetResourceMapRootElement(this.MTAResource, mapName))
    end
    -- <summary>
    -- Adds a new config to this resource
    -- </summary>
    AddConfig = function (this, filePath, fileType)
      local mtaNode = SlipeMtaDefinitions.MtaServer.AddResourceConfig(filePath, fileType)

      local document = SystemXml.XmlDocument()
      local xmlNode = document:CreateElement(SlipeMtaDefinitions.MtaShared.XmlNodeGetName(mtaNode))
      xmlNode:index(mtaNode)
      return xmlNode
    end
    -- <summary>
    -- This function adds a new empty mapfile to this resource
    -- </summary>
    AddMap = function (this, filePath, dimension)
      local mtaNode = SlipeMtaDefinitions.MtaServer.AddResourceMap(filePath, dimension)

      local document = SystemXml.XmlDocument()
      local xmlNode = document:CreateElement(SlipeMtaDefinitions.MtaShared.XmlNodeGetName(mtaNode))
      xmlNode:index(mtaNode)
      return xmlNode
    end
    -- <summary>
    -- This function deletes this resource from the MTA memory and moves it to the /resources-cache/trash/ directory.
    -- </summary>
    Delete = function (this)
      return SlipeMtaDefinitions.MtaServer.DeleteResource(this:getName())
    end
    -- <summary>
    -- Refreshes the current resource
    -- </summary>
    Refresh = function (this)
      return SlipeMtaDefinitions.MtaServer.RefreshResources(true, this.MTAResource)
    end
    -- <summary>
    -- This function removes a file from the resource.
    -- </summary>
    RemoveFile = function (this, fileName)
      return SlipeMtaDefinitions.MtaServer.RemoveResourceFile(this.MTAResource, fileName)
    end
    -- <summary>
    -- This function renames a resource.
    -- </summary>
    Rename = function (this, newName, organizationalPath)
      return SlipeMtaDefinitions.MtaServer.RenameResource(this:getName(), newName, organizationalPath)
    end
    -- <summary>
    -- This function restarts a running resource. Restarting will destroy all the elements that the resource has created (as stopping the resource does).
    -- </summary>
    Restart = function (this, persistent, configs, maps, scripts, html, clientConfigs, clientScripts, clientFiles)
      return SlipeMtaDefinitions.MtaServer.RestartResource(this.MTAResource, persistent, configs, maps, scripts, html, clientConfigs, clientScripts, clientFiles)
    end
    -- <summary>
    -- This function retrieves the value of any attribute in a resource info tag.
    -- </summary>
    GetInfo = function (this, attribute)
      return SlipeMtaDefinitions.MtaServer.GetResourceInfo(this.MTAResource, attribute)
    end
    -- <summary>
    -- This function sets the value of any attribute in a resource info tag.
    -- </summary>
    SetInfo = function (this, attribute, value)
      return SlipeMtaDefinitions.MtaServer.SetResourceInfo(this.MTAResource, attribute, value)
    end
    -- <summary>
    -- This function starts a resource either persistently or as a dependency of the current resource.
    -- </summary>
    Start = function (this, persistent, includedResources, configs, maps, scripts, html, clientConfigs, clientScripts, clientFiles)
      return SlipeMtaDefinitions.MtaServer.StartResource(this.MTAResource, persistent, includedResources, configs, maps, scripts, html, clientConfigs, clientScripts, clientFiles)
    end
    -- <summary>
    -- This function stops a running resource.
    -- </summary>
    Stop = function (this)
      return SlipeMtaDefinitions.MtaServer.StopResource(this.MTAResource)
    end
    -- <summary>
    -- This function copies a specified resource with a new name
    -- </summary>
    CopyFrom = function (resource, name, organizationalDir)
      return SlipeServerResources.ResourceManager.getInstance():GetResource(SlipeMtaDefinitions.MtaServer.CopyResource(resource.MTAResource, name, organizationalDir))
    end
    -- <summary>
    -- This function finds new resources and checks for changes to the current ones.
    -- </summary>
    RefreshAll = function ()
      return SlipeMtaDefinitions.MtaServer.RefreshResources(true)
    end
    return {
      __inherits__ = function (out)
        return {
          out.Slipe.Shared.Resources.SharedResource
        }
      end,
      getLastStartTime = getLastStartTime,
      getLoadFailureReason = getLoadFailureReason,
      getLoadTime = getLoadTime,
      getOrganizationalPath = getOrganizationalPath,
      getIsArchived = getIsArchived,
      getACLRequests = getACLRequests,
      getThis = getThis,
      getAll = getAll,
      UpdateACLRequest = UpdateACLRequest,
      MapRoot = MapRoot,
      AddConfig = AddConfig,
      AddMap = AddMap,
      Delete = Delete,
      Refresh = Refresh,
      RemoveFile = RemoveFile,
      Rename = Rename,
      Restart = Restart,
      GetInfo = GetInfo,
      SetInfo = SetInfo,
      Start = Start,
      Stop = Stop,
      CopyFrom = CopyFrom,
      RefreshAll = RefreshAll,
      __ctor__ = {
        __ctor1__,
        __ctor2__
      }
    }
  end)
end)
